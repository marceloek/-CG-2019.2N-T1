/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t -T -o src/components/model/model.tsx public/objects/rayquaza/scene.gltf 
Files: public/objects/rayquaza/scene.gltf [48.73KB] > /home/marceloek/github.com/marceloek/CG-2019.2N-T1/src/components/model/scene-transformed.glb [137.04KB] (-181%)
Author: Jonathon.Lai (https://sketchfab.com/Jonathon.Lai)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/models/53e9e6596045429fb5d4f0c4d7cd483f
Title: Rayquaza #384
*/

import { useGLTF } from '@react-three/drei'
import { useRef } from 'react'
import { GLTF } from 'three-stdlib'

type ActionName = 'Take 001'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Body_Ceramic_0: THREE.SkinnedMesh
    ['Body_03_-_Default_0']: THREE.SkinnedMesh
    Body__BR_Rayquazamat_0_0: THREE.SkinnedMesh
    ['Body_02_-_Default_0']: THREE.SkinnedMesh
    Body_Solid_Glass_0: THREE.SkinnedMesh
    Sphere001_Wall_Paint_0: THREE.Mesh
    _rootJoint: THREE.Bone
  }
  materials: {
    Ceramic: THREE.MeshStandardMaterial
    ['03_-_Default']: THREE.MeshStandardMaterial
    BR_Rayquazamat_0: THREE.MeshStandardMaterial
    ['02_-_Default']: THREE.MeshStandardMaterial
    Solid_Glass: THREE.MeshStandardMaterial
    Wall_Paint: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

// type ContextType = Record<
//   string,
//   React.ForwardRefExoticComponent<
//     | JSX.IntrinsicElements['skinnedMesh']
//     | JSX.IntrinsicElements['mesh']
//     | JSX.IntrinsicElements['bone']
//   >
// >

export function Rayquaza(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>(null)

  const { nodes, materials } = useGLTF('/glb/rayquaza.glb') as GLTFResult

  // const { actions } = useAnimations(animations, group)

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="OSG_Scene">
        <group name="RootNode">
          <group
            name="Dummy001"
            position={[-3.045, -34.252, 1216.306]}
            rotation={[-Math.PI / 2, 0, 0]}
          >
            <group>
              <primitive object={nodes._rootJoint} />
              <skinnedMesh
                name="Body_Ceramic_0"
                geometry={nodes.Body_Ceramic_0.geometry}
                material={materials.Ceramic}
                skeleton={nodes.Body_Ceramic_0.skeleton}
              />
              <skinnedMesh
                name="Body_03_-_Default_0"
                geometry={nodes['Body_03_-_Default_0'].geometry}
                material={materials['03_-_Default']}
                skeleton={nodes['Body_03_-_Default_0'].skeleton}
              />
              <skinnedMesh
                name="Body__BR_Rayquazamat_0_0"
                geometry={nodes.Body__BR_Rayquazamat_0_0.geometry}
                material={materials.BR_Rayquazamat_0}
                skeleton={nodes.Body__BR_Rayquazamat_0_0.skeleton}
              />
              <skinnedMesh
                name="Body_02_-_Default_0"
                geometry={nodes['Body_02_-_Default_0'].geometry}
                material={materials['02_-_Default']}
                skeleton={nodes['Body_02_-_Default_0'].skeleton}
              />
              <skinnedMesh
                name="Body_Solid_Glass_0"
                geometry={nodes.Body_Solid_Glass_0.geometry}
                material={materials.Solid_Glass}
                skeleton={nodes.Body_Solid_Glass_0.skeleton}
              />
            </group>
          </group>
        </group>
        <mesh
          name="Sphere001_Wall_Paint_0"
          geometry={nodes.Sphere001_Wall_Paint_0.geometry}
          material={materials.Wall_Paint}
          position={[-135.752, 670.604, 340.088]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={0.592}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/rayquaza.glb')
