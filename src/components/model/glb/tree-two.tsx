/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 -t -T -o src/components/model/model.tsx public/objects/tree/2/scene.gltf 
Files: public/objects/tree/2/scene.gltf [18.61KB] > /home/marceloek/github.com/marceloek/CG-2019.2N-T1/src/components/model/scene-transformed.glb [181.57KB] (-876%)
Author: farhad.Guli (https://sketchfab.com/farhad.Guli)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/models/7016d1d32fe748f0a8b3f5eb39374bc4
Title: Tree
*/

import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    mesh_0: THREE.Mesh
    mesh_1: THREE.Mesh
    mesh_2: THREE.Mesh
  }
  materials: {
    formica_cinza: THREE.MeshStandardMaterial
    material: THREE.MeshStandardMaterial
    Vegetation_Bark_Maple_1: THREE.MeshStandardMaterial
  }
  // animations: GLTFAction[]
}

// type ContextType = Record<
//   string,
//   React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>
// >

export function TreeTwo(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/tree-two.glb') as GLTFResult

  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.mesh_0.geometry}
        material={materials.formica_cinza}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.mesh_1.geometry}
        material={materials.material}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.mesh_2.geometry}
        material={materials.Vegetation_Bark_Maple_1}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/glb/tree-two.glb')
